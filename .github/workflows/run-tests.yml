name: run-tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        php: [7.4, 7.3, 7.2]
        laravel: [8.*, 7.*, 6.*, 5.8.*]
        dependency-version: [prefer-lowest, prefer-stable]
        os: [ubuntu-latest]
        include:
          - laravel: 8.*
            testbench: 6.*
            legacy: "laravel/legacy-factories:^1.0.4"
          - laravel: 7.*
            testbench: 5.*
          - laravel: 6.*
            testbench: 4.*
          - laravel: 5.8.*
            testbench: 3.8.*
        exclude:
          - php: 7.4
            laravel: 5.8.*
          - php: 7.2
            laravel: 8.*

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-
            dependencies-laravel-${{ matrix.laravel }}-php-
            dependencies-laravel-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlit3, pdo_sqlite
          coverage: xdebug
          tools: composer:v2

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" ${{ matrix.legacy }} --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Execute tests
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover

      - name: Upload Codecov coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.clover
          flags: unittests
          name: P${{ matrix.php }}-L${{ matrix.laravel }}-${{ matrix.dependency-version }}-${{ matrix.os }}-${{ github.sha }}
